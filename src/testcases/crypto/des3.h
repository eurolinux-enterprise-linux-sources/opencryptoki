#ifndef _DES3_H_
#define _DES3_H_
#endif

#include "pkcs11types.h"

#define MAX_KEY_SIZE  64
#define MAX_TEXT_SIZE 128
#define MAX_IV_SIZE  64
#define DES3_BLOCK_SIZE	8
#define DES3_KEY_SIZE 24
#define DES3_IV_SIZE 8

struct des3_test_vector {
	char key[MAX_KEY_SIZE];
	unsigned char klen;
	char iv[MAX_IV_SIZE];
	unsigned char ivlen;
	char plaintext[MAX_TEXT_SIZE];
	unsigned char plen;
	char ciphertext[MAX_TEXT_SIZE];
	unsigned char clen;
};

struct published_test_suite_info {
	const char *name;
	unsigned int tvcount;
	struct des3_test_vector *tv;
	unsigned long mechanism;
};

struct generated_test_suite_info {
	const char *name;
	CK_MECHANISM mech;
};

struct CK_MECHANISM des3_keygen = {
	.mechanism = CKM_DES3_KEY_GEN,
	.ulParameterLen = 0,
	.pParameter = NULL,
};

char des3_cbc_iv[] = {0x67,0x9f,0xdb,0xee,0x16,0x6c,0x2e,0x0a};

/** http://csrc.nist.gov/groups/STM/cavp/documents/des/tdesmmt.zip
    TECBMMT1.rsp
**/
static struct des3_test_vector des3_ecb_tv[] = {

	{//count 0
	.key =	      { 0xc4,0x4a,0xef,0x54,0x5b,0x13,0x31,0xf2,
			0xc4,0x4a,0xef,0x54,0x5b,0x13,0x31,0xf2,
			0xc4,0x4a,0xef,0x54,0x5b,0x13,0x31,0xf2 },
	.klen = 24,
	.iv = {},
	.ivlen = 0,
	.plaintext =  { 0x6c,0x70,0xfa,0x4b,0x7a,0xba,0x00,0xca },
	.plen = 8,
	.ciphertext = { 0x94,0x13,0x63,0x8a,0x0b,0x54,0x01,0xbd },
	.clen = 8,
	}, {//count 1
	.key =	      { 0x2c,0xb5,0x64,0x2a,0x45,0xda,0xda,0x4c,
			0x2c,0xb5,0x64,0x2a,0x45,0xda,0xda,0x4c,
			0x2c,0xb5,0x64,0x2a,0x45,0xda,0xda,0x4c },
	.klen = 24,
	.iv = {},
	.ivlen = 0,
	.plaintext =  { 0x48,0x0d,0x56,0x62,0x7c,0xa3,0x3b,0xfa,
			0x1e,0xba,0x37,0x81,0x55,0xf4,0x35,0xc6 },
	.plen = 16,
	.ciphertext = { 0x45,0x97,0x96,0x7c,0x13,0x0f,0x10,0x0c,
			0xb4,0x4f,0x10,0x68,0x76,0x83,0xa8,0x08 },
	.clen = 16,
	}, {//count 2
	.key =	      { 0xf1,0x75,0xd5,0x2a,0x38,0x8f,0xf4,0xba,
			0xf1,0x75,0xd5,0x2a,0x38,0x8f,0xf4,0xba,
			0xf1,0x75,0xd5,0x2a,0x38,0x8f,0xf4,0xba },
	.klen = 24,
	.iv = {},
	.ivlen = 0,
	.plaintext =  { 0xff,0x2d,0xd1,0x4d,0xce,0xde,0xaa,0x43,
			0xb1,0x2a,0x26,0xee,0x8f,0x2d,0x82,0xea,
			0xa8,0xfa,0x15,0x84,0x26,0xdf,0x83,0x1c },
	.plen = 24,
	.ciphertext = { 0x56,0x53,0x5e,0x46,0x61,0xff,0x6b,0xf8,
			0x92,0xad,0x5f,0x35,0x93,0x17,0x9a,0x0f,
			0xc7,0xdd,0x64,0x75,0x67,0x93,0x0d,0xbc },
	.clen = 24,
	}, {//count 3
	.key      =   { 0xb5,0x1a,0x4f,0xba,0xce,0x3d,0xe3,0x54,
			0xb5,0x1a,0x4f,0xba,0xce,0x3d,0xe3,0x54,
			0xb5,0x1a,0x4f,0xba,0xce,0x3d,0xe3,0x54 },
	.klen = 24,
	.iv = {},
	.ivlen = 0,
	.plaintext =  { 0x1d,0x1a,0x56,0x7f,0x1b,0xee,0xab,0x44,
			0xbb,0x7e,0xec,0xf0,0xae,0x08,0x6b,0x59,
			0xfd,0xbd,0xa9,0xd1,0x42,0x21,0x23,0xac,
			0x17,0xb4,0x6e,0xfc,0xcf,0xd2,0x86,0x9f },
	.plen = 32,
	.ciphertext = { 0xa6,0x86,0x11,0x33,0x71,0x8c,0x51,0x87,
			0xee,0xce,0xa8,0x2c,0x7e,0x26,0xbe,0x2e,
			0x0e,0x93,0x81,0x12,0xb1,0xda,0x96,0x51,
			0x1f,0x48,0xce,0xcd,0xb8,0x42,0xd6,0xba },
	.clen = 32,
	}, {//count 4
	.key =	      { 0xc1,0xcb,0xfd,0xe6,0x5b,0x52,0x98,0xae,
			0xc1,0xcb,0xfd,0xe6,0x5b,0x52,0x98,0xae,
			0xc1,0xcb,0xfd,0xe6,0x5b,0x52,0x98,0xae },
	.klen = 24,
	.iv = {},
	.ivlen = 0,
	.plaintext =  { 0xe4,0xf2,0xc8,0xb4,0x55,0x36,0x71,0x9b,
			0x42,0xca,0xe8,0xde,0xc1,0xb9,0x1b,0x84,
			0x4b,0xe7,0x6d,0x38,0x6f,0xf7,0x08,0x4c,
			0xc7,0x6b,0x70,0xff,0x2c,0x0d,0x5e,0xfb,
			0x26,0x8e,0xcb,0x22,0xa6,0x6e,0x4b,0x8a },
	.plen = 40,
	.ciphertext = { 0xfa,0x0c,0x0d,0x54,0xd3,0x34,0x0a,0xcb,
			0xeb,0xf9,0xed,0x6b,0x78,0xaa,0x4c,0x1a,
			0x91,0xab,0x7d,0x99,0x2e,0xa7,0xf6,0x59,
			0x76,0xba,0x56,0x78,0xe3,0x20,0x9f,0xc1,
			0x93,0x8e,0x12,0xa5,0x62,0x10,0xcf,0xff },
	.clen = 40,
	}, {//count 5
	.key =	{ 0x9e,0xce,0x49,0x34,0x16,0x68,0xbf,0x3b,
			0x9e,0xce,0x49,0x34,0x16,0x68,0xbf,0x3b,
			0x9e,0xce,0x49,0x34,0x16,0x68,0xbf,0x3b },
	.klen = 24,
	.iv = {},
	.ivlen = 0,
	.plaintext =  { 0xb5,0xf0,0xde,0x24,0x52,0x38,0xe5,0xb2,
			0xff,0x69,0xe5,0x34,0x2c,0x04,0xed,0xd3,
			0x71,0x12,0x72,0x78,0x21,0x65,0x8c,0x31,
			0x22,0x20,0x63,0xd6,0xfc,0x7a,0xe3,0xec,
			0x2f,0xbe,0xb8,0xc9,0xca,0x96,0x76,0xf9,
			0x39,0x8a,0x17,0xe1,0x5f,0xc4,0xab,0xa2 },
	.plen = 48,
	.ciphertext = { 0x92,0x18,0xd8,0xde,0x25,0x3a,0x9a,0x7a,
			0x81,0xe6,0x63,0xd3,0x83,0x32,0xf0,0xc7,
			0x28,0x27,0xcd,0x97,0xa5,0x36,0x33,0x84,
			0x33,0xc1,0xb3,0x04,0x03,0x13,0x42,0x1c,
			0x3c,0xa3,0xf8,0xac,0x26,0x04,0x4f,0x4f,
			0xcb,0x2a,0xb3,0x23,0x4f,0x86,0x9b,0xaf },
	.clen = 48,
	}


};

/** http://csrc.nist.gov/groups/STM/cavp/documents/des/tdesmmt.zip
    TCBCMMT1.rsp
**/
static struct des3_test_vector des3_cbc_tv[] = {

	{//count 0
	.key =	      { 0xa4,0xe3,0x19,0x51,0x0b,0xef,0x76,0xea,
			0xa4,0xe3,0x19,0x51,0x0b,0xef,0x76,0xea,
			0xa4,0xe3,0x19,0x51,0x0b,0xef,0x76,0xea },
	.klen = 24,
	.iv =	      { 0x67,0x9f,0xdb,0xee,0x16,0x6c,0x2e,0x0a },
	.ivlen =  DES3_IV_SIZE,
	.plaintext =  { 0x36,0x92,0x6e,0x3a,0x27,0x20,0xea,0x9f },
	.plen = 8,
	.ciphertext = { 0xc1,0x08,0xc0,0xe2,0x5e,0xe8,0x1e,0xa3 },
	.clen = 8,
	}, {//count 1
	.key =	      { 0x0e,0xe5,0xc8,0x97,0xb6,0xea,0x01,0x51,
			0x0e,0xe5,0xc8,0x97,0xb6,0xea,0x01,0x51,
			0x0e,0xe5,0xc8,0x97,0xb6,0xea,0x01,0x51 },
	.klen = 24,
	.iv =	      { 0x44,0xc0,0x61,0x73,0xcd,0xbf,0xd9,0xed },
	.ivlen = DES3_IV_SIZE,
	.plaintext =  { 0x71,0x12,0xbd,0xc4,0x89,0xda,0x7a,0x91,
			0x59,0x04,0x69,0xba,0x37,0xa5,0x1e,0x19 },
	.plen = 16,
	.ciphertext = { 0xe9,0x94,0xa7,0x00,0x16,0xfe,0x7b,0x49,
			0xfa,0x32,0x00,0xfd,0x0f,0x37,0x7a,0x55 },
	.clen = 16,
	}, {//count 2
	.key =	      { 0x98,0x9d,0xd9,0x34,0x1a,0xec,0x9e,0xfd,
			0x98,0x9d,0xd9,0x34,0x1a,0xec,0x9e,0xfd,
			0x98,0x9d,0xd9,0x34,0x1a,0xec,0x9e,0xfd },
	.klen = 24,
	.iv =	      { 0x1d,0xad,0x34,0x2c,0x0f,0xb3,0xc9,0xb1 },
	.ivlen = DES3_IV_SIZE,
	.plaintext =  { 0xaa,0xfe,0x78,0x54,0xd3,0x4e,0x67,0x30,
			0x89,0x95,0x99,0xc8,0x79,0xdc,0xc2,0x8e,
			0xa0,0x39,0x73,0x61,0xb2,0xa1,0x9d,0x01 },
	.plen = 24,
	.ciphertext = { 0x69,0xce,0xb8,0x56,0x7a,0xcb,0xac,0x1b,
			0x47,0xd9,0x18,0x02,0xa2,0x35,0xc4,0xe9,
			0xe4,0xd0,0xaf,0x89,0x4c,0x53,0x37,0x59 },
	.clen = 24,
	}, {//count 3
	.key =	      { 0x92,0x6b,0x25,0x62,0xcb,0xe0,0xa4,0x7f,
			0x92,0x6b,0x25,0x62,0xcb,0xe0,0xa4,0x7f,
			0x92,0x6b,0x25,0x62,0xcb,0xe0,0xa4,0x7f },
	.klen = 24,
	.iv =	      { 0x81,0x17,0xfa,0x8f,0x84,0x39,0x4f,0x9d },
	.ivlen = DES3_IV_SIZE,
	.plaintext =  { 0xcd,0x6c,0xea,0x0e,0xbf,0x83,0x20,0x3c,
			0x00,0x9a,0x8d,0x19,0x36,0xcc,0xb4,0xb1,
			0x90,0xa3,0xc4,0x00,0x62,0x2e,0x62,0xac,
			0x0f,0x54,0xa8,0xf3,0x2c,0x67,0x6e,0xe1 },
	.plen = 32,
	.ciphertext = { 0x57,0x4e,0x2f,0x32,0x31,0xb9,0x91,0xec,
			0xfc,0x53,0xfe,0x84,0x6f,0xa2,0xa0,0xac,
			0x09,0x2a,0x52,0xe0,0x12,0x5b,0x2f,0xe5,
			0x2c,0xf7,0xfb,0x68,0xe3,0xfa,0x41,0xa9 },
	.clen = 32,
	}, {//count 4
	.key =	      { 0xb3,0xf4,0xcb,0x6d,0x51,0xb6,0xfe,0xa8,
			0xb3,0xf4,0xcb,0x6d,0x51,0xb6,0xfe,0xa8,
			0xb3,0xf4,0xcb,0x6d,0x51,0xb6,0xfe,0xa8 },
	.klen = 24,
	.iv =	      { 0x58,0x89,0x36,0xa3,0x6e,0x8b,0xa9,0x1c },
	.ivlen = DES3_IV_SIZE,
	.plaintext =  { 0xed,0x2e,0xbf,0xbd,0x9e,0x9d,0x2a,0x94,
			0x14,0x8a,0xb4,0x41,0x68,0xbb,0xdd,0xd8,
			0xb0,0xfd,0x0a,0xb7,0x23,0xba,0xce,0xb8,
			0x7e,0xce,0x67,0xab,0xa6,0x97,0x8c,0x03,
			0x8e,0x4b,0x66,0xcf,0x5b,0x8f,0xdc,0xec },
	.plen = 40,
	.ciphertext = { 0xb2,0xa0,0xba,0xb9,0x58,0xea,0x35,0x8c,
			0x02,0x44,0x4c,0xa1,0xb6,0x25,0xcb,0xcc,
			0x40,0x28,0x55,0xf0,0x68,0x6a,0xcf,0x3c,
			0xf5,0x0e,0x86,0x8e,0xfd,0x15,0xbc,0x3c,
			0xa1,0x2f,0x12,0xb1,0x4d,0x83,0x6b,0x31 },
	.clen = 40,
	}, {//count 5
	.key =	      { 0xf1,0xc8,0xf4,0x4c,0xd9,0xe5,0x6b,0xc7 },
	.klen = 24,
	.iv =	      { 0x60,0x49,0x9d,0xe8,0xe6,0x3e,0x6e,0xa9 },
	.ivlen = DES3_IV_SIZE,
	.plaintext =  { 0xca,0xad,0xed,0x64,0x8d,0xd5,0x63,0x7e,
			0x0b,0x37,0xed,0x0d,0x18,0x22,0x30,0x6f,
			0xa8,0x90,0xd2,0x0a,0x9c,0xa9,0xe7,0xea,
			0xdb,0x89,0xac,0xab,0xa5,0x43,0x78,0x9a,
			0x24,0x26,0xef,0x17,0x44,0x3f,0x79,0x3e,
			0xc5,0x1e,0xf3,0xc6,0x8f,0xdd,0xa4,0x28 },
	.plen = 48,
	.ciphertext = { 0x38,0x8c,0x5f,0xb0,0x5d,0x2c,0xd3,0x78,
			0x2b,0xb2,0xbc,0xc7,0x07,0x8b,0x95,0x3d,
			0xb0,0x89,0xc9,0xa3,0x2a,0x52,0x3c,0xc1,
			0x5d,0xd5,0x36,0xb4,0x46,0xeb,0xf5,0xa3,
			0xd8,0xce,0xc1,0x6c,0x16,0xb2,0xad,0x72,
			0x46,0xd3,0xb3,0x61,0x1f,0xbe,0xec,0x57 },
	.clen = 48,
	}
};

# define NUM_OF_PUBLISHED_TESTSUITES	2

struct published_test_suite_info published_test_suites[] = {
	{
		.name ="DES3_ECB",
		.tvcount = 6,
		.tv = des3_ecb_tv,
		.mechanism = CKM_DES3_ECB,
	}, {
		.name = "DES3_CBC",
		.tvcount = 6,
		.tv = des3_cbc_tv,
		.mechanism = CKM_DES3_CBC,
	}
};

#define NUM_OF_GENERATED_TESTSUITES 3

static struct generated_test_suite_info generated_test_suites[]  = {
    {
	.name = "DES3_ECB",
	.mech = {CKM_DES3_ECB, 0, 0},
    }, {
	.name = "DES3_CBC",
	.mech = {CKM_DES3_CBC, &des3_cbc_iv, DES3_IV_SIZE},
    }, {
	.name = "DES3_CBC_PAD",
	.mech = {CKM_DES3_CBC_PAD, &des3_cbc_iv, DES3_IV_SIZE},
    }
};
