commit a2d60d856fa9780c42ef5c058aa0865502b3dcdc
Author: Joy Latten <jmlatten@linux.vnet.ibm.com>
Date:   Tue Mar 31 11:46:19 2015 -0500

    In rsa pss mfg1, the check to see if a length is < 2^32 causes overflow on
    32-bit systems. Remove this check since it can be debated this check is done
    implicitly in the data type.
    
    Signed-off-by: Joy Latten <jmlatten@linux.vnet.ibm.com>

diff --git a/usr/lib/pkcs11/common/mech_rsa.c b/usr/lib/pkcs11/common/mech_rsa.c
index c20593e..7b749ba 100755
--- a/usr/lib/pkcs11/common/mech_rsa.c
+++ b/usr/lib/pkcs11/common/mech_rsa.c
@@ -2488,10 +2488,6 @@ CK_RV mgf1(CK_BYTE *seed, CK_ULONG seedlen, CK_BYTE *mask, CK_ULONG maskLen,
 	if (rc != CKR_OK)
 		return CKR_FUNCTION_FAILED;
 
-	/* Step 1: see if mask too long */
-	if (maskLen > ((1 << 31) * hlen))
-		return CKR_FUNCTION_FAILED;
-
 	/* do some preparations */
 	seed_buffer = malloc(seedlen + 4);
 	if (seed_buffer == NULL)
